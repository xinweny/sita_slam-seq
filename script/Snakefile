#### Packages ####
import glob, os
import pandas as pd

#### Functions ####
def get_organism(gse):
    metadata_df = pd.read_csv(f"SraRunTable_{gse}.txt", header=0, sep=',')

    return metadata_df['Organism'][0]

#### Config ####
workdir: "/rds/project/rs2099/rds-rs2099-toxgenomics/sita_slam-seq/" + config['GSE']
localrules: all, alleyoop_collapse

SAMPLES = [os.path.basename(sample).replace('.fq.gz', '') for sample in glob.glob("fastq/*.fq.gz")
           if not "trimmed" in os.path.basename(sample)]
ORGANISM = get_organism(config['GSE'])

#### Workflow ####
rule all:
    input:
        expand("out/count/{sample}_trimmed.fq_slamdunk_mapped_filtered_tcount_collapsed.csv", sample=SAMPLES)

rule trim_galore:
    input:
        expand("fastq/{sample}.fq.gz", sample=SAMPLES)
    output:
        expand("fastq/{sample}_trimmed.fq.gz", sample=SAMPLES)
    params:
        job_name = f"{config['GSE']}_TRIM"
    resources:
        time_min = 120,
        nodes = 1,
        tasks = 1,
        cpus = len(SAMPLES) if len(SAMPLES) <= 32 else 32
    shell:
        "trim_galore -j {resources.cpus} -o fastq --stringency 3 {input}"

rule slam_dunk:
    input:
        expand("fastq/{sample}_trimmed.fq.gz", sample=SAMPLES)
    output:
        expand("out/map/{sample}_trimmed.fq_slamdunk_mapped.bam", sample=SAMPLES),
        expand("out/filter/{sample}_trimmed.fq_slamdunk_mapped_filtered.bam", sample=SAMPLES),
        expand("out/snp/{sample}_trimmed.fq_slamdunk_mapped_filtered_snp.vcf", sample=SAMPLES),
        expand("out/count/{sample}_trimmed.fq_slamdunk_mapped_filtered_tcount.csv", sample=SAMPLES)
    resources:
        time_min = 360,
        nodes = 1,
        tasks = 1,
        cpus = len(SAMPLES) if len(SAMPLES) <= 32 else 32
    params:
        job_name = f"{config['GSE']}_SLAMDUNK",
        organism = ORGANISM
    run:
        if params.organism == "Homo sapiens":
            fasta = "/rds/project/rs2099/rds-rs2099-toxgenomics/shared/human/GRCh38.primary_assembly.genome.fa"
            bed_utr = "/rds/project/rs2099/rds-rs2099-toxgenomics/shared/human/GRCh38_gencode.v34_3UTR.bed"
        elif params.organism == "Mus musculus":
            fasta = "/rds/project/rs2099/rds-rs2099-toxgenomics/shared/mouse/GRCm38.primary_assembly.genome.fa"
            bed_utr = "/rds/project/rs2099/rds-rs2099-toxgenomics/shared/mouse/GRCm38_gencode.vM25_3UTR.bed"

        shell("""slamdunk all \
        -r {fasta} \
        -b {bed_utr} \
        -m \
        -t {resources.cpus} \
        -5 12 \
        -n 100 \
        -mts 2 \
        -mv 0.2 \
        -mbq 27 \
        -o out \
        {input}""")

rule alleyoop_collapse:
    input:
        "out/count/{sample}_trimmed.fq_slamdunk_mapped_filtered_tcount.csv"
    output:
        "out/count/{sample}_trimmed.fq_slamdunk_mapped_filtered_tcount_collapsed.csv"
    shell:
        "alleyoop collapse -o out/count {input}"
